Pour la trainé de la balle, faire copy de drawgame avec ballyTrainé est égale a bally +1 
et enlever les condition de rebond, avoir des variable sur la vitesse 

/*Idée diminution de la barre lorsquon perd une vie, a réussir a le faire des deux coté*/

/*changement de la couleur de bar pour chaque vie perdu, peut entre en faisant changeColor(rcolor,gcolor,bcolor) 
et en diminuant a chaque fois           249 249 82  Jaune       249 124 82 Orange       249 1 82 Rouge*/

Faire en sorte que les brique saffiche au hasard et que a chaque fois 
quon en touche une ca équivaut a notre score et le but 

                Si trop compliqué

//Faire une introduction au jeu et jeu style hacker 


//ecran daccueil
//ecran dintro 
//jeu 
//gameover 
//victoire


/*----------------------Fonction Clique de souris----------------------*/

void MouseClick(int MouseX,int MouseY)
{
	printf("position de la souris x : %d , y : %d\n", MouseX, MouseY);
	if(compteurBrick==0 && coeur>0)
	{
		if((MouseX>=logoAgain) && (MouseX<=logoAgain+logoX) && (MouseY>=logoheightY) && (MouseY<=logoheightY+logoY))
		{
			RestartGame();
		}
		else if((MouseX>=logoNoYW) && (MouseX<=logoNoYW+logoX) && (MouseY>=logoheightY) && (MouseY<=logoheightY+logoY))
		{
			freeAndTerminate();
		}
	}
	if(coeur==0 && compteurBrick>0)
	{
		if((MouseX>=logoTryAgain ) && (MouseX<=logoTryAgain +logoX) && (MouseY>=logoheightY) && (MouseY<=logoheightY+logoY))
		{
			RestartGame();
		}
		else if((MouseX>=logoNoYD) && (MouseX<=logoNoYD+logoX) && (MouseY>=logoheightY) && (MouseY<=logoheightY+logoY))
		{
			freeAndTerminate();
		}
	}
	if(game==0)
	{
		if((MouseX>=Menu1X ) && (MouseX<=Menu1X+LongueurMenuX) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY))
		{
			game = 1;
			ShowEcran = 1;
		}
		else if((MouseX>=Menu2X) && (MouseX<=Menu2X+(LongueurMenuX)) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY))
		{
			easter++;
			ShowEcran = 3;
		}
		else if((MouseX>=Menu2X) && (MouseX<=Menu2X+(LongueurMenuX*2)) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY)&& easter==1 || (MouseX>=Menu2X) && (MouseX<=Menu2X+(LongueurMenuX*2)) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY)&& easter==2)
		{
			easter++;
			ShowEcran = 3;
		}
	}
	if(game==0 && easter==4)
	{
		freeAndTerminate();
	}
	if(game==1)
	{
		if((MouseX>=Menu1X) && (MouseX<=Menu1X+LongueurMenuX) && (MouseY>=MenuJoueur1Y) && (MouseY<=MenuJoueur1Y+LongueurMenuY)&&joueur>0)
		{
			joueur--;
		}
		else if((MouseX>=Menu2X) && (MouseX<=Menu2X+LongueurMenuX) && (MouseY>=MenuJoueur1Y) && (MouseY<=MenuJoueur1Y+LongueurMenuY)&&joueur<4)
		{
			joueur++;
		}
		else if((MouseX>=Menu1X+175) && (MouseX<=Menu1X+175+LongueurMenuX) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY)&&joueur>0)
		{
			game=2;
			ShowEcran=1;
		}
	}
	if(game==2)
	{
		if((MouseX>=Menu1X ) && (MouseX<=Menu1X+LongueurMenuX) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY))
		{
			game = 3;
			RestartGame();
			quit=0;
			ShowEcran = 1;
		}
		else if((MouseX>=Menu2X) && (MouseX<=Menu2X+LongueurMenuX) && (MouseY>=MenuY) && (MouseY<=MenuY+LongueurMenuY))
		{
			game=1;
		}
	}
}

